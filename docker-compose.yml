version: '3'

volumes:
  postgres_data:

networks:
  network:

services:
  rest:
    build: ./restApi
    env_file: ./restApi/.env
    restart: always
    container_name: accounting-rest-api-server
    command: python /src/manage.py runserver 0.0.0.0:8091
    volumes:
      - ./restApi:/src
    ports:
      - 0.0.0.0:8091:8091
    networks: 
      network:
        aliases:
          - rest-api
    depends_on:
      - db
    
  db:
    image: postgres:10.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks: 
      network:
        aliases:
          - database
  
  graphql:
    build: ./server
    restart: always
    container_name: accounting-graphql-server
    env_file: ./server/.env
    command: npm run start
    volumes:
      - ./server:/src
    ports:
      - 0.0.0.0:4002:4002
    networks: 
      network:
        aliases:
          - graphql-server

  nuxt:
    build: ./client
    container_name: accounting-ui
    restart: always
    environment:
      HOST: 0.0.0.0
      APOLLO_SERVER_HTTP: 'http://graphql-server:4002/api'
      APOLLO_CLIENT_HTTP: 'http://shining-present.ru:4002/api'
      # APOLLO_CLIENT_HTTP: 'http://localhost:4002/api'
      APOLLO_COOKIE_DOMAIN: 'shining-present.ru'
      # APOLLO_COOKIE_DOMAIN: 'localhost'

    ports:
      - "0.0.0.0:3333:3333"
    command: npm run start
    networks: 
      network:
        aliases:
          - accounting-ui-server

  nginx:
    build: ./nginx
    container_name: accounting-ui-nginx
    ports:
      - 8443:8443
    depends_on:
      - nuxt
    networks: 
      network:
        aliases:
          - ui-nginx
