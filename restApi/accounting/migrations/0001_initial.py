# Generated by Django 2.2.3 on 2019-12-01 10:38

import accounting.models
from django.db import migrations, models
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, verbose_name='Идентификатор')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
                ('total_consumption', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=20, verbose_name='Расход')),
                ('total_profit', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=20, verbose_name='Приход')),
                ('total_balance', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=20, verbose_name='Баланс/Сальдо')),
                ('color', models.CharField(blank=True, max_length=9, null=True, verbose_name='Цвет')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удалён?')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransactionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, verbose_name='Идентификатор')),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
                ('color', models.CharField(blank=True, max_length=9, null=True, verbose_name='Цвет')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удалён?')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, verbose_name='Идентификатор')),
                ('category', models.CharField(blank=True, max_length=50, null=True, verbose_name='Категория')),
                ('segment', models.CharField(blank=True, max_length=50, null=True, verbose_name='Категория')),
                ('transaction_object', models.CharField(blank=True, max_length=50, null=True, verbose_name='Филиал')),
                ('note', models.CharField(blank=True, max_length=400, null=True, verbose_name='Примечание')),
                ('consumption', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=20, verbose_name='Расход')),
                ('profit', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=20, verbose_name='Приход')),
                ('balance', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=20, verbose_name='Баланс/Сальдо')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата проведения операции')),
                ('order', models.IntegerField(default=1, verbose_name='Порядок операции')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удалён?')),
                ('account', models.ForeignKey(blank=True, on_delete='SET_NULL', related_name='account_of_transactions', to='accounting.Account', verbose_name='Cчёт транзакции')),
                ('transactionType', models.ForeignKey(blank=True, on_delete='SET_NULL', related_name='transaction_type', to='accounting.TransactionType', verbose_name='Транзакции счёта')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='account',
            name='transactions',
            field=models.ManyToManyField(blank=True, related_name='transactions_of_account', to='accounting.Transaction', verbose_name='Транзакции счёта'),
        ),
        migrations.AddField(
            model_name='account',
            name='transactions_types',
            field=models.ManyToManyField(blank=True, related_name='used_transactions_types_by_account', to='accounting.TransactionType', verbose_name='Сущестующие типы транзакции'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, verbose_name='Идентификатор')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('name', models.CharField(blank=True, max_length=254, verbose_name='Имя пользователя')),
                ('role', models.CharField(choices=[('admin', 'Смотрящий'), ('user', 'Рядовой'), ('viewer', 'Наблюдающий')], default='viewer', max_length=6, verbose_name='Роль')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удалён?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', accounting.models.UserManager()),
            ],
        ),
    ]
